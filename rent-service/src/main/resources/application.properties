spring.application.name=Vehicle Rent

server.port=3002
jwt.secret.key=${JWT_SECRET_KEY}

## Database Configuration
spring.datasource.url=jdbc:postgresql://rent-db:5433/rent_db
spring.datasource.username=postgres
spring.datasource.password=POSTGRES_PASSWORD
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=create
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.properties.security.protocol=PLAINTEXT
spring.kafka.properties.sasl.mechanism=GSSAPI
# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Consumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.group-id=consumer-group
# Kafka Topic
spring.kafka.template.default-topic=my-topic


grpc.server.port=9191
grpc.client.vehicle-service.address=static://vehicle-service:9090
grpc.client.vehicle-service.negotiationType=PLAINTEXT
grpc.client.payment-service.address=static://payment-service:9292
grpc.client.payment-service.negotiationType=PLAINTEXT


